@startuml
package util{

class MapUtil{
}
}
package match{

abstract class Match{

+ Match(Competitor c1 , Competitor c2)
}

class MatchAlea{
	
}
Match *-- MatchAlea
}


class Competitor{
# int nbPts
}

package meeting {

abstract class Competition{

# Match match
# final List<Competitor> competitors
+ Competition(List<Competitor> competitors)
+ play():void
# play(List<Competitor> competitors):void
# {abstract} playMatch(Competitor c1 , Competitor c2):void
+ ranking():Map<Competitor,Integer>

}

class League{

+ League()

}
class Tournament{

+ Tournament()

}

Competition <|-- Tournament
Competition <|-- League
}
@enduml